def intercambia(A,i,j):
	temp=A[i]
	A[i]=A[j]
	A[j]=temp

def Particionar(A,p,r): #funcion encargada de particionar la lista (num_menores<=pivote<num_mayores)
	x=A[p] #toma al primer elemento de la lista como pivote
	i=p
	for j in range(p+1,r+1): #se trabaja con la lista desde su primer valor+1 hasta el ultimo+1
		if (A[j]<=x): #Condicion para que el ordenamiento sea ascendente o descendente
			i=i+1
			intercambia(A,i,j)
	intercambia(A,i,p) #cambia de posicion al pivote
	return i #nueva posicion del pivote

def QuickSort(A,p,r):
	if (p<r):
		q=Particionar(A,p,r) #posicion donde se encuentra el pivote al haber particionado
		QuickSort(A,p,q-1) #Ordena la lista con numeros menores o iguales al pivote
		QuickSort(A,q+1,r) #Ordena la lista con numeros mayores al pivote
		
A=[54,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20,26,93,17,77,31,44,55,20]
QuickSort(A,0,len(A)-1)
print(A)
